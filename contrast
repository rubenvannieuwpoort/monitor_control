#!/usr/bin/env bash

# To adapt this script for your monitor:
#   1. Make sure you have i2c-tools and ddccontrol installed:
#          sudo apt-get install i2c-tools ddccontrol
#   2. Enable kernel module
#          sudo modprobe i2c-dev
#   3. Find out the id's of the monitors:
#          sudo i2cdetect -l
#      and try the id's of the form i2c-X:
#          sudo ddccontrol dev:/dev/i2c-X
#
#   4. If you have found the monitor, look for the address that
#      identifies contrast. Replace the 0x12 with this.


if [[ "$1" == "--help" ]]; then
	echo "Usage:"
	echo "    contrast [<argument>]"
	echo
	echo "Without argument, contrast simply returns the current monitor contrast."
	echo
	echo "The argument can be (n denotes a number):"
	echo "  <n>  Set the contrast level to <n>"
	echo " +<n>  Increase the current contrast level by <n>"
	echo " -<n>  Decrease the current contrast level by <n>"
	echo
	exit 0
fi

contrast=0

if [[ ! -z $1 ]]; then
	sign=${1:0:1}
fi

if [[ -z $1 ]] || [[ "$sign" = "+" ]] || [[ "$sign" = "-" ]]; then
	contrast=$(ddccontrol dev:/dev/i2c-6 -r 0x12 2>/dev/null | tail -1 | awk -F '[//]' '{ print $(NF-1) }')
	change=true
fi

if [[ -z $1 ]]; then
	echo "$contrast"
else
	if [[ "$change" = true ]]; then
		contrast=$(($contrast+$1))
		if [[ $contrast -gt 100 ]]; then
			contrast=100
		elif [[ $contrast -lt 0 ]]; then
			contrast=0
		fi
	else
		contrast="$1"
	fi
	
	if [[ 0 -le $contrast ]] && [[ $contrast -le 100 ]]; then
		ddccontrol dev:/dev/i2c-6 -r 0x12 -w $contrast > /dev/null 2>&1
		ddccontrol dev:/dev/i2c-7 -r 0x12 -w $contrast > /dev/null 2>&1
		if [[ "$change" = true ]]; then
			echo "$contrast"
		fi
	fi
fi
